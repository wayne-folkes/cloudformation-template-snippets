AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ProjectName:
    Description: Name of Project
    Type: String
  ImageName:
    Description: Docker Image
    Type: String
  DBCredentialsArn:
    Description: ARN of the secret with DB Credentials
    Type: String

Resources:
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Cpu: 256
          EntryPoint:
            - '/src/data-munge/app.py'
          Environment:
            - Name: DB_CREDENTIALS_SECRET
              Value: 'munge_db'
            - Name: LOGLEVEL
              Value: 'INFO'
          Image: !Ref ImageName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: !Ref ProjectName
          Memory: 512
          Name: data-munger
          Secrets:
            - Name: DB_CREDENTIALS
              ValueFrom: !Ref DBCredentialsArn
      Cpu: '256'
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      Family: !Ref ProjectName
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt TaskRole.Arn
  ExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Join ['', [!Ref ProjectName, ExecutionRole]]
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service: ecs-tasks.amazonaws.com
              Action: 'sts:AssumeRole'
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
        Policies:                
          - PolicyName: AmazonECSTaskExecutionRolePolicy
            PolicyDocument:
              Statement:
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource: '*'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref ProjectName, TaskRole]]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                # Allow the ECS Tasks to download images from ECR
                - 'ecr:GetAuthorizationToken'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:BatchGetImage'
                # Allow the ECS tasks to upload logs to CloudWatch
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Ref ProjectName
      RetentionInDays: 7
    